
managed implementation in class zbp_des_travel_i unique;
strict ( 2 ); // this ensure we are follwing strict syntax

with draft;

define behavior for ZDES_TRAVEL_I alias Travel
persistent table zdes_travel
with additional save
draft table zdes_d_travel
lock master
total etag LastChangedAt
authorization master ( global, instance )
etag master LocalLastChangedAt   // system detect the latest timestamp and  prevent overwrite
{
  create;  // users can create new travels
  update;  // users can update or edit the existing travels
  delete;  // users can cancel / delete the entrire travel ( incluing its child booking and booksuppl)
  field ( numbering : managed, readonly ) TravelUuid; // non editable field on the fiori screen
  //  field ( readonly ) TravelId, OverallStatus;
  field ( mandatory : create, readonly : update ) TravelId, OverallStatus;
  field ( features : instance ) BookingFee;
  association _Booking { create; with draft; } //users can do the bookings to the current travel


  draft action Edit;
  draft action Discard;
  draft action Resume;
  draft action Activate optimized;
  draft determine action Prepare
  {
    validation validateCusomer;
    validation validateAgency;
    validation validateDates;
  }



  //Determinations
  determination setTravelId on save { create; update; }
  determination setOverallStatus on modify { create; update; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  //Validations
  validation validateCusomer on save { create; field CustomerId; }
  validation validateAgency on save { create; field AgencyId; }
  validation validateDates on save { create; field BeginDate, EndDate; }


  //Actions
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;
  action ( features : instance ) deductDiscount parameter ZDES_A_DISCOUNT result [1] $self { default function GetDefaultsFordeductDiscount; }
  internal action reCalcTotalprice;

  determine action validateCustomerID { validation validateCusomer; }
  determine action validateAgencyID { validation validateAgency; }
  determine action validateDatesVal { validation validateDates; }
  side effects
  {
    determine action validateCustomerID executed on field CustomerId affects messages;
    determine action validateAgencyID executed on field AgencyId affects messages;
    determine action validateDatesVal executed on field BeginDate, field EndDate affects messages;
    field BookingFee affects field TotalPrice;

  }

  // Do mapping between CDS entity Alias names and Data base level fields
  mapping for zdes_travel
    {

      // cds entity ALIAS name LHS = Database level feild name RHS
      TravelUuid         = travel_uuid;
      TravelId           = travel_id;
      AgencyId           = agency_id;
      CustomerId         = customer_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      LocalCreatedBy     = local_created_by;
      LocalCreatedAt     = local_created_at;
      LocalLastChangedBy = local_last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
      LastChangedAt      = last_changed_at;
    }


}



define behavior for ZDES_BOOKING_I alias Booking
persistent table zdes_booking
draft table zdes_d_booking
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update; // user can update or edit the booking once they inside the travel instance
  delete; // user can delete/cancel the Booking and its child Booking suppl
  field ( readonly ) TravelUuid, BookingId, BookingDate;
  field ( numbering : managed, readonly ) BookingUuid; // this one also generate by RAP framework and it is non editable
  association _Travel { with draft; }
  association _BookingSupplement { create; with draft; } //users can do the booking suppl to the current booking under the travel


  determination SetBookingId on save { create; }
  determination SetBookingDate on save { create; }

  determination calculateTotalPrice on modify { create; field FlightPrice, CurrencyCode; }

  side effects
  {

    field FlightPrice affects field _travel.TotalPrice;

  }


  mapping for zdes_booking // do mapping between cds entity alias names and data base level fields
    {
      BookingUuid        = booking_uuid;
      TravelUUID         = parent_uuid;
      BookingId          = booking_id;
      BookingDate        = booking_date;
      CustomerId         = customer_id;
      CarrierId          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      BookingStatus      = booking_status;
      LocalLastChangedAt = local_last_changed_at;
    }

}



define behavior for ZDES_BKSUPPL_I alias BookingSuppl
persistent table zdes_bksuppl
draft table zdes_d_bksuppl
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly ) BooksupplUuid;

  field ( readonly ) BookingUUID, TravelUUID, BookingSupplementId;
  association _Travel { with draft; }
  association _Booking { with draft; }


  determination SetBookingSupplId on save { create; }


  determination calculateTotalPrice on modify { create; field Price, CurrencyCode; }

  side effects
  {

    field Price affects field _travel.TotalPrice;

  }

  mapping for zdes_bksuppl
    {
      BooksupplUuid       = booksuppl_uuid;
      TravelUUID          = root_uuid;
      BookingUUID         = parent_uuid;
      BookingSupplementId = booking_supplement_id;
      SupplementId        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LocalLastChangedAt  = local_last_changed_at;
    }

}